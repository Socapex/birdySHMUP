{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"lSD",
				"lSDL_mixer"
			],
			[
				"sp",
				"speedY	float"
			],
			[
				"se",
				"setY(const float y)	void"
			],
			[
				"move",
				"moveDown_	bool"
			],
			[
				"SDL_Free",
				"SDL_FreeSurface(SDL_Surface *surface)	void"
			],
			[
				"O",
				"OnLoad(const char *file)	SDL_Surface *"
			],
			[
				"sur",
				"surfBackground_	SDL_Surface *"
			],
			[
				"SDL_S",
				"SDL_Surface	struct"
			],
			[
				"ma",
				"maxSpeedY_	float"
			],
			[
				"spee",
				"speedY	float"
			],
			[
				"mo",
				"moveDown_	false &&"
			],
			[
				"max",
				"maxSpeedY_	float"
			],
			[
				"mov",
				"moveDown_	bool"
			],
			[
				"acc",
				"accelY	float"
			],
			[
				"ENTITY_FLAG_",
				"ENTITY_FLAG_NONE	enum <anonymous>"
			],
			[
				"enti",
				"entityA	CEntity*"
			],
			[
				"ent",
				"entityB	CEntity*"
			],
			[
				"CE",
				"CEntityCol	class"
			],
			[
				"setmove",
				"setMoveRight(const bool move)	void"
			],
			[
				"set",
				"setMoveLeft(const bool move)	void"
			],
			[
				"play",
				"player1_	CPlayer"
			],
			[
				"ge",
				"getY() const	int"
			],
			[
				"pla",
				"player1_	CPlayer"
			],
			[
				"g",
				"getX() const	int"
			],
			[
				"pa",
				"paths_	std::vector<std::string>"
			],
			[
				"player",
				"player1Path	std::string"
			],
			[
				"CEnt",
				"CEntity	class"
			],
			[
				"On",
				"OnLoop()	void"
			],
			[
				"CEnti",
				"CEntityCol	class"
			],
			[
				"en",
				"entityB	CEntity *"
			],
			[
				"e",
				"entityCol	CEntityCol"
			],
			[
				"col",
				"colHeight	int"
			],
			[
				"new",
				"newY	const int"
			],
			[
				"ENTI",
				"ENTITY_FLAG_MAPONLY	enum <anonymous>"
			],
			[
				"TI",
				"TILE_TYPE_BLOCK	enum <anonymous>"
			],
			[
				"pos",
				"posValidEntity(CEntity *entity, const int newX, const int newY)	bool"
			],
			[
				"EN",
				"ENTITY_FLAG_MAPONLY	enum <anonymous>"
			],
			[
				"get",
				"getTile(const int x, const int y)	CTile *"
			],
			[
				"M",
				"MAP_WIDTH	macro"
			],
			[
				"map",
				"mapHeight	int"
			],
			[
				"MA",
				"MAP_HEIGHT	macro"
			],
			[
				"end",
				"endX	int"
			],
			[
				"sta",
				"startY	int"
			],
			[
				"T",
				"TILE_TYPE_NORMAL	enum <anonymous>"
			],
			[
				"top",
				"top2	int"
			],
			[
				"bo",
				"bottom1	int"
			],
			[
				"bottom",
				"bottom2	int"
			],
			[
				"w",
				"width_	int"
			],
			[
				"ne",
				"newY	double"
			],
			[
				"posV",
				"posValid(const int newX, const int newY)	bool"
			],
			[
				"curre",
				"currentFrameRow	int"
			],
			[
				"on",
				"OnMove(const float moveX, const float moveY)	void"
			],
			[
				"spe",
				"speedY	float"
			],
			[
				"ENT",
				"ENTITY_FLAG_GRAVITY	enum <anonymous>"
			],
			[
				"cur",
				"currentFrameRow	int"
			],
			[
				"Cen",
				"CEntityCol	class"
			],
			[
				"SDL_Get",
				"SDL_GetTicks()	Uint32"
			],
			[
				"SDL_DE",
				"SDL_DEFAULT_REPEAT_INTERVAL	macro"
			],
			[
				"SDL_Ena",
				"SDL_EnableKeyRepeat(int delay, int interval)	int"
			],
			[
				"CA",
				"CArea	class"
			],
			[
				"tar",
				"targetY_	int *"
			],
			[
				"TA",
				"TARGET_MODE_CENTER	enum <anonymous>"
			],
			[
				"targ",
				"targetY_	int *"
			],
			[
				"ta",
				"targetY_	int *"
			],
			[
				"y",
				"y_	int"
			],
			[
				"file",
				"fileHandle	FILE*"
			],
			[
				"til",
				"tileSetY	int"
			],
			[
				"tile",
				"tileSetWidth	int"
			],
			[
				"TY",
				"TILE_TYPE_NONE	enum <anonymous>"
			],
			[
				"su",
				"surfTileset_	SDL_Surface *"
			],
			[
				"t",
				"typeID	int"
			],
			[
				"fil",
				"fileHandle	FILE*"
			],
			[
				"CTI",
				"CTile	class"
			],
			[
				"OnL",
				"OnLoad(char *file, int width, int height, int maxFrames)	bool"
			],
			[
				"Surf",
				"Surf_Entity	SDL_Surface *"
			],
			[
				"he",
				"height	const int"
			],
			[
				"wid",
				"width	const int"
			],
			[
				"An",
				"animeState	int"
			],
			[
				"osc",
				"oscillate_	bool"
			],
			[
				"fram",
				"frame	const int"
			],
			[
				"fra",
				"frameInc_	int"
			],
			[
				"mat",
				"matchingPlays	std::vector<int>"
			],
			[
				"v",
				"vector<typename _Tp>	class"
			],
			[
				"matc",
				"matchingPlays	std::vector<int>"
			],
			[
				"save",
				"savedPlays	std::vector<std::vector<int> >"
			],
			[
				"saved",
				"savedPlays	std::vector<std::vector<int> >"
			],
			[
				"sa",
				"savedPlays	std::vector<std::vector<int> >"
			],
			[
				"op",
				"opponent_	AI"
			],
			[
				"o",
				"ostream	typedef"
			],
			[
				"lo",
				"loadFile()	void"
			],
			[
				"p",
				"push_back(const value_type &__x)	void"
			],
			[
				"line",
				"lineNumber	int"
			],
			[
				"lin",
				"lineNumber	int"
			],
			[
				"sstream",
				"stringstream	typedef"
			],
			[
				"GRI",
				"GRID_TYPE_X	enum <anonymous>"
			],
			[
				"GR",
				"GRID_TYPE_X	enum <anonymous>"
			],
			[
				"chec",
				"checkIfFinished()	bool"
			],
			[
				"GRID",
				"GRID_TYPE_O	enum <anonymous>"
			],
			[
				"surf",
				"surfDisplay_	SDL_Surface *"
			],
			[
				"gr",
				"grid_	uint8_t [9]"
			],
			[
				"surfD",
				"surfDraw_	SDL_Surface *"
			],
			[
				"game",
				"gaemFinished_	bool"
			],
			[
				"res",
				"resetBoard()	void"
			],
			[
				"OnD",
				"OnDraw(SDL_Surface *surfDest, SDL_Surface *surfSource, int x, int y)	bool"
			],
			[
				"uint",
				"uint8_t	typedef"
			],
			[
				"uin",
				"uint8_t	typedef"
			],
			[
				"SDL_SRC",
				"SDL_SRCCOLORKEY	macro"
			],
			[
				"CSU",
				"CSurface	class"
			],
			[
				"OnRes",
				"OnResize(int w, int h)	void"
			],
			[
				"OnJoy",
				"OnJoyButtonUp(Uint8 which, Uint8 button)	void"
			],
			[
				"SDL_JOY",
				"SDL_JOYBUTTONUP	SDL_EventType"
			],
			[
				"j",
				"jbutton	SDL_JoyButtonEvent"
			],
			[
				"OnJoyB",
				"OnJoyButtonDown(Uint8 which, Uint8 button)	void"
			],
			[
				"SDL_JOYB",
				"SDL_JOYBUTTONDOWN	SDL_EventType"
			],
			[
				"SDL_JOYHA",
				"SDL_JOYHATMOTION	SDL_EventType"
			],
			[
				"SDL_JOYBA",
				"SDL_JOYBALLMOTION	SDL_EventType"
			],
			[
				"OnMB",
				"OnMButtonUp(int mX, int mY)	void"
			],
			[
				"SDL_BUT",
				"SDL_BUTTON_MIDDLE	macro"
			],
			[
				"OnRB",
				"OnRButtonUp(int mX, int mY)	void"
			],
			[
				"SDL_BUTTON",
				"SDL_BUTTON_RIGHT	macro"
			],
			[
				"SDL_BUTT",
				"SDL_BUTTON_LEFT	macro"
			],
			[
				"SDL_MOU",
				"SDL_MOUSEBUTTONUP	SDL_EventType"
			],
			[
				"SDL_BU",
				"SDL_BUTTON_LEFT	macro"
			],
			[
				"OnMou",
				"OnMouseMove(int mX, int mY, int relX, int relY, bool Left, bool Right, bool Middle)	void"
			],
			[
				"OnK",
				"OnKeyUp(SDLKey sym, SDLMod mod, Uint16 unicode)	void"
			],
			[
				"SDL_K",
				"SDL_KEYUP	SDL_EventType"
			],
			[
				"s",
				"sym	SDLKey"
			],
			[
				"OnKe",
				"OnKeyDown(SDLKey sym, SDLMod mod, Uint16 unicode)	void"
			]
		]
	},
	"buffers":
	[
<<<<<<< HEAD
=======
		{
			"file": "src/CSurface.cpp",
			"settings":
			{
				"buffer_size": 1421,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/CApp.cpp",
			"settings":
			{
				"buffer_size": 583,
				"line_ending": "Unix"
			}
		}
>>>>>>> Plus de refacotring et cleanup de memory leaks. Classe CBulletSpawner.
	],
	"build_system": "Packages/C++/C++.sublime-build",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"reindent",
				"Indentation: Reindent Lines"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"subl",
				"Preferences: SublimeClang Settings â€“ Default"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp_OnRender.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp_OnEvent.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CEntity.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/README.md",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CEntity.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CPlayer.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CPlayer.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp_OnInit.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/Makefile",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/.gitignore",
		"/Volumes/User/philippe_groarke/.bash_profile",
		"/Volumes/AudioPlugins/Wordlists/Cities-Countries/GeoNames-Wordlist-v2.txt",
		"/Volumes/User/philippe_groarke/Desktop/WiFiDiagnosticReport-20130702-1329/opendirectoryd.log",
		"/Volumes/User/philippe_groarke/Downloads/Game_Demo_3/Level.cpp",
		"/Volumes/User/philippe_groarke/Downloads/Game_Demo_3/EnemyFlight.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/LOG1000/TP5/Makefile",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/LOG1000/TP6/Makefile",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp_OnCleanup.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CApp_OnLoop.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CEntityCol.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CEntity.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CArea.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CEntity.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CMap.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CTile.h",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CTile.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CMap.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CArea.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CAnimation.h",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CAnimation.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CAnimation.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CPlayer.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CApp_OnRender.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CApp_OnLoop.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CSurface.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/Makefile",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision 2/CApp_OnInit.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CEntity.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CApp_OnInit.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CApp_OnCleanup.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CPlayer.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CSurface.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CApp_OnRender.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CApp_OnLoop.cpp",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CApp.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CEvent.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CEvent.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CCamera.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CCamera.h",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CCamera.h",
		"/Volumes/User/philippe_groarke/Downloads/SDL Tutorial 8/CCamera.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CSurface.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CMap.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/birdyShmup/src/CArea.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/socapexs-manaplus/.gitignore",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CMap.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CArea.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CCamera.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CCamera.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp_OnRender.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/src/Makefile",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp_OnEvent.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CTile.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CTile.h",
		"/Volumes/User/philippe_groarke/Downloads/sdl_maps/CEvent.h",
		"/Volumes/User/philippe_groarke/Downloads/sdl_maps/CEvent.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl_maps/CEntity.h",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision/CEvent.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision/CEntity.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CEvent.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/Defines.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CSurface.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp_OnInit.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp_OnCleanup.cpp",
		"/Volumes/User/philippe_groarke/Downloads/sdl-collision/CCamera.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CMap.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CArea.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp_OnLoop.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CApp.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CEntity.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CEntity.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CSurface.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTemplate/CSurface.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTemplate/CSurface.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CSurface.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CSurface.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CAnimation.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/CAnimation.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/SDLTutorialAnimation/Makefile",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CApp_OnCleanup.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CApp_OnInit.cpp",
		"/Volumes/User/philippe_groarke/Documents/Poly/Session1/INF1005C/TD4/TD4/exo1.cpp",
		"/Volumes/User/philippe_groarke/Documents/Poly/Session1/INF1005C/TD3/TP3/exo2.cpp",
		"/Volumes/User/philippe_groarke/Documents/Poly/Session1/INF1005C/TD3/exo5.cpp",
		"/Volumes/User/philippe_groarke/Documents/Poly/Session1/INF1005C/TD3/exo6.cpp",
		"/Volumes/User/philippe_groarke/Documents/Poly/Session1/INF1005C/TD6/td6.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CApp_OnRender.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CApp_OnEvent.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CApp_OnLoop.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP 1/main.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP5/main.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP4/main.cpp",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/AI.h",
		"/Volumes/User/philippe_groarke/Documents/ValyriaTear_2013-04-24-185824_Philippes-MacBook-Pro.crash",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CEvent.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/CEvent.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/log1000-13/TP6/sdl_t.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/GamePrototype/main.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/log1000-13/TP6/Game.h",
		"/Volumes/User/philippe_groarke/Desktop/test1010.txt",
		"/Volumes/User/philippe_groarke/Desktop/h11.txt",
		"/Volumes/User/philippe_groarke/Desktop/h10.txt",
		"/opt/local/include/libintl.h",
		"/opt/local/share/gettext/intl/lock.h",
		"/opt/local/include/glib-2.0/glib/ggettext.h",
		"/Volumes/User/philippe_groarke/Documents/XCode/ValyriaTear/.gitignore",
		"/Volumes/User/philippe_groarke/Downloads/ExempleTest/ExempleTest\\CompteTest.cpp",
		"/Volumes/User/philippe_groarke/Downloads/ExempleTest/ExempleTest\\CompteTest.h",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/log1000-13/TP6/Game.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/LOG1000/TP6/tictactoe.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP3_Headers/etudiant.h",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP3_Headers/etudiant.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP3_Headers/entreprise.h",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP5/Message.cpp",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP5/Matrice.h",
		"/Volumes/User/philippe_groarke/Dropbox/Ming_Poly/INF1010/TP5/Message.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"mont tremblan",
			"wenceslas",
			"CEntity",
			"OnAnimate",
			"onAnimate",
			"OnAnimate",
			"onAnimate",
			"onanimate",
			"col_x",
			"onanimate",
			"NewX",
			"MoveX",
			"MoveY",
			"NewY",
			"ManaPlus",
			"\n",
			"virtual ",
			"maxFrames",
			"oscillate",
			"fstream",
			"getli",
			"int",
			"virtual",
			"image",
			"recursive",
			"mutex",
			"switch_turn",
			"get_turn",
			"last",
			"process",
			"clean",
			"full",
			"clean",
			"full",
			"prendreUneCase",
			"take",
			"/*",
			"first",
			"hover",
			"transparent",
			"p",
			"color",
			"kheader",
			"size",
			"span",
			"shadow",
			";\n",
			"webkit",
			"box-shadow",
			"clearfix",
			"93",
			"685542",
			"93",
			"ba9d55",
			"hover",
			"2F2727",
			"1a82f7",
			"li",
			"kunena",
			"content",
			"min-he",
			"weight",
			"hr",
			"topics",
			"header",
			"moz-box",
			"forabg",
			"inner",
			"footer",
			"nav",
			"button",
			"well",
			"tempTracker",
			"last_proportional",
			"proportional",
			"calculerCounterContinuer",
			"()();",
			"calculerCounter",
			"(roueDroite)",
			"(roueGauche)",
			"roueGauche",
			"const",
			"CONST",
			"const",
			"CONST",
			"roueGauche",
			"accelere",
			"void",
			"uint8_t",
			"void",
			"uint16_t",
			"CONSTANT",
			"DECELERE",
			"ACCELERE",
			"DernierEtat",
			"uint16_t& gauche, uint16_t& droite",
			"addScript",
			"</div>",
			"<div class=\"liste\">",
			"breadcr",
			"a",
			"color: #d3b378",
			"color: #d3b378;",
			"current",
			"hover",
			"li",
			"text",
			"&",
			"page-hea",
			"image",
			"transp",
			"nav",
			"sidebar",
			"well",
			"menu",
			"nav",
			"sidebar",
			"well",
			"downloads/",
			"guides/",
			"links/",
			"menu",
			"main",
			"mainmenu",
			"shadow",
			"navigation",
			"header",
			"color"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"vitesseLentRoueVite",
			"vitesseLentDefaut",
			"",
			"H",
			"F",
			"X",
			"G",
			"M",
			"Z",
			"V",
			"D",
			"R",
			"L",
			"O",
			"L",
			"U",
			"N",
			"P",
			"I",
			"T",
			"S",
			"E",
			"L",
			"C",
			"B",
			"A",
			"C",
			"S",
			"E",
			"B",
			"A",
			"c",
			"s",
			"t",
			"e",
			"b",
			"a",
			"z",
			"y",
			"notes",
			"vector",
			"map[\"storage_daggers_soldier_guy\"]",
			"start_quest_mole",
			"finish_quest_daggers",
			"start_quest_daggers"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
<<<<<<< HEAD
=======
				{
					"buffer": 0,
					"file": "src/CSurface.cpp",
					"settings":
					{
						"buffer_size": 1421,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/CApp.cpp",
					"settings":
					{
						"buffer_size": 583,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
>>>>>>> Plus de refacotring et cleanup de memory leaks. Classe CBulletSpawner.
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 142.0
	},
	"output.clang_static_analyzer":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ruby",
				"ruby/ruby_impl.cpp"
			],
			[
				"eva",
				"scripts/npcs/village/eva.lua"
			],
			[
				"globa",
				"scripts/global_events.lua"
			],
			[
				"soldier",
				"scripts/functions/soldierpatrol.lua"
			],
			[
				"bor",
				"scripts/npcs/pub/borin.lua"
			],
			[
				"soldi",
				"scripts/monsters/soldier.lua"
			],
			[
				"scu",
				"scripts/npcs/pub/scullionjohn.lua"
			],
			[
				"casern_st",
				"scripts/maps/casern_storage.lua"
			],
			[
				"pries",
				"scripts/npcs/village/priestesslinota.lua"
			],
			[
				"inn",
				"scripts/npcs/pub/innkeepernorman.lua"
			],
			[
				"casern",
				"scripts/maps/casern_cellar.lua"
			],
			[
				"scull",
				"scripts/npcs/casern_north/scullionjohn.lua"
			],
			[
				"rel",
				"scripts/functions/religion.lua"
			],
			[
				"npch",
				"scripts/functions/npchelper.lua"
			],
			[
				"items",
				"items.xml"
			],
			[
				"monste",
				"monsters.xml"
			],
			[
				"bori",
				"scripts/npcs/pub/borin.lua"
			],
			[
				"ite",
				"items.xml"
			],
			[
				"monst",
				"monsters.xml"
			],
			[
				"monk",
				"scripts/npcs/village/monkmartin.lua"
			],
			[
				"soldie",
				"scripts/monsters/soldier.lua"
			],
			[
				"patrol",
				"scripts/functions/patrol.lua"
			],
			[
				"guar",
				"scripts/functions/guardpatrol.lua"
			],
			[
				"global",
				"scripts/global_events.lua"
			],
			[
				"villa",
				"scripts/maps/village.lua"
			],
			[
				"mont",
				"monsters.xml"
			],
			[
				"monster",
				"monsters.xml"
			],
			[
				"skele",
				"scripts/monsters/skeleton_boss.lua"
			],
			[
				"cave",
				"scripts/maps/cave.lua"
			],
			[
				"caser_s",
				"scripts/maps/casern_storage.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 132.0,
	"status_bar_visible": true
}
